services:
  rabbitmq:
    image: rabbitmq:4.1.1-management-alpine
    ports:
      - "127.0.0.1:15672:15672"
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    healthcheck: 
      test: [ "CMD", "rabbitmq-diagnostics", "check_port_connectivity" ]
      interval: 10s
      timeout: 5s
      retries: 5

  auth_service:
    build:
      context: .
      dockerfile: auth_service/app/Dockerfile
    ports:
      - "127.0.0.1:8000:8000"
    env_file:
      - .env
    environment:
      - POSTGRES_AUTH_DB_URL=${POSTGRES_AUTH_DB_URL}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - REFRESH_TOKEN_EXPIRE_DAYS=${REFRESH_TOKEN_EXPIRE_DAYS}
      - SECRET_KEY=${SECRET_KEY}
      - RABBITMQ_URL=${RABBITMQ_URL}
    volumes:
      - auth_data:/app/data
    depends_on:
      rabbitmq:
        condition: service_healthy

  task_service:
    build:
      context: .
      dockerfile: task_service/app/Dockerfile
    ports:
      - "127.0.0.1:8001:8000"
    env_file:
      - .env
    environment:
      - POSTGRES_TASK_DB_URL=${POSTGRES_TASK_DB_URL}
      - RABBITMQ_URL=${RABBITMQ_URL}
    volumes:
      - task_data:/app/data
    depends_on:
      auth_service:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  auth_db:
    image: postgres:16
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_AUTH_USER}
      - POSTGRES_PASSWORD=${POSTGRES_AUTH_PASSWORD}
      - POSTGRES_DB=${POSTGRES_AUTH_DB}
    ports:
      - "5433:5432"

  task_db:
    image: postgres:16
    volumes:
      - task_postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_TASK_USER}
      - POSTGRES_PASSWORD=${POSTGRES_TASK_PASSWORD}
      - POSTGRES_DB=${POSTGRES_TASK_DB}
    ports:
      - "5434:5432"

volumes:
  task_data:
  auth_data:
  task_postgres_data:
  auth_postgres_data: